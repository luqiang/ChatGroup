#2015.11.17 
基础的最简单的命令行的接受和发送消息完成v0.0.1
目前想法：
server只需要进行消息的处理就行，不用管其他的。
client分两种，管理员和普通用户两套程序。
管理员的功能：
发送消息和图片，查看当前在线的人。
类似qq群。
普通用户：
只需要聊天框上面的就行，只需要看到消息。
#2015.11.18
普通用户的client上，net和gui分开。
net：
连接，通过输入的用户名和密码（md5之类的加密一下）发送给server，server接收之后确认，发回结果，正确就一直保持连接。
在这个过程中，client先connect，如果连接不上，向gui推送消息。
client接收到消息，通知gui更新ui
gui，自动保存聊天记录，图片以时间命名（直接秒数即可）

#2015.11.22
先不做登录部分，直接显示通知信息界面。

server：
记录用户类和管理员类的数组，接收的数据，保存数据库吧。mysql可以存图片没问题。
用户1 读到消息left了，最新的消息指针是right，如果right-left<2000;那么没问题，全部放内存，否则就从数据库读。
先不管数据库的事情。
先实现的功能：
向客户端推送消息。
client：
从server接收消息
admin：
向server发送文字消息

server:
用户登录功能，获取用户发送过来的用户名和密码，然后从库里找用户名，如果找到了，并且匹配密码成功，就返回ok。
监听所有人。select.select必须使用sock作为readlist，所以使用map进行sock和实例的映射
#2015.11.24
数据发送格式：
在发送任何数据之前，先发送数据类型
1_：登录  username@key
2_：注册
3_：admin发送图片消息
如果是发送文字消息，则什么也不提前发。
用户的状态：
0:刚刚建立连接
1：logging
2：registering
3: 登录成功
#2015.11.30
从文件读取用户信息，然后登录的时候去匹配出来就行
信息通讯的时候，注意如果有错误，要记得重置
信息通讯的时候，也要加上，是来自admin还是系统的反馈错误
如果注册之后，想要重新登录，注意判断--问题解决，每次先判断data的数据是什么内容
#2015.12.1

登录注册等的检测时，注意去掉空格之类的。
在设置窗口大小的时候，直接geometry()只能设置高度，不能设置宽度，奇怪。。而只能通过设置listbox的大小来设置宽度
#2015.12.3
同一个用户可以多个地点同时登录
把admin和普通客户端合起来。根据返回值不同来判断是展现admin还是普通的client

#2015.12.5
注册功能
#2015.12.6
聊天记录的保存功能，已经下次登录时会自动发送没有看过的消息。